任何具有多个路由的程序都需要可以连接不同页面的链接，例如导航条。
在模板中直接编写简单路由的URL 链接不难，但对于包含可变部分的动态路由，在模板 中构建正确的URL 就很困难。而且，直接编写 URL 会对代码中定义的路由产生不必要的 依赖关系。如果重新定义路由，模板中的链接可能会失效。

为了避免这些问题，Flask 提供了 url_for() 辅助函数，它可以使用程序 URL 映射中保存 的信息生成URL。

url_for() 函数最简单的用法是以视图函数名（或者 app.add_url_route() 定义路由时使用 的端点名）作为参数，返回对应的 URL。例如，在当前版本的 hello.py 程序中调用 url_ for('index') 得到的结果是 /。调用 url_for('index', _external=True) 返回的则是绝对地 址，在这个示例中是 http://localhost:5000/。

生成连接程序内不同路由的链接时，使用相对地址就足够了。如果要生成在 浏览器之外使用的链接，则必须使用绝对地址，例如在电子邮件中发送的 链接。

使用 url_for() 生成动态地址时，将动态部分作为关键字参数传入。例如，url_for ('user', name='john', _external=True) 的返回结果是 http://localhost:5000/user/john。

传入 url_for() 的关键字参数不仅限于动态路由中的参数。函数能将任何额外参数添加到 查询字符串中。例如，url_for('index', page=2) 的返回结果是 /?page=2。
